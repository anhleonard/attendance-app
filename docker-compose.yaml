services:
  # Database - PostgreSQL
  postgres:
    image: postgres:15
    container_name: attendance-app-postgres
    env_file:
      - ./learning-app/.env.postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - attendance-app-network
    restart: unless-stopped

  # Redis for queues and caching
  redis:
    image: redis:7-alpine
    container_name: attendance-app-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - attendance-app-network
    restart: unless-stopped

  # MinIO for file storage (S3-compatible)
  minio:
    image: minio/minio:latest
    container_name: attendance-app-minio
    command: server /data --console-address ":9001"
    env_file:
      - ./learning-app/.env.minio
    ports:
      - "9000:9000"  # API
      - "9001:9001"  # Console
    volumes:
      - minio_data:/data
    networks:
      - attendance-app-network
    restart: unless-stopped

  # n8n for workflow automation (email sending)
  n8n:
    image: n8nio/n8n:latest
    container_name: attendance-app-n8n
    env_file:
      - ./learning-app/.env.n8n
    ports:
      - "5678:5678"
    volumes:
      - n8n_data:/home/node/.n8n
    networks:
      - attendance-app-network
    depends_on:
      - postgres
    restart: unless-stopped

  # Elasticsearch for log aggregation and search
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.0
    container_name: attendance-app-elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    networks:
      - attendance-app-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9200/_cluster/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Kibana for log visualization and management
  kibana:
    image: docker.elastic.co/kibana/kibana:8.11.0
    container_name: attendance-app-kibana
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    ports:
      - "5601:5601"
    volumes:
      - kibana_data:/usr/share/kibana/data
    networks:
      - attendance-app-network
    depends_on:
      elasticsearch:
        condition: service_healthy
    restart: unless-stopped

  # Logstash for log processing
  logstash:
    image: docker.elastic.co/logstash/logstash:8.11.0
    container_name: attendance-app-logstash
    volumes:
      - ./logstash.conf:/usr/share/logstash/pipeline/logstash.conf:ro
    networks:
      - attendance-app-network
    depends_on:
      elasticsearch:
        condition: service_healthy
    restart: unless-stopped
    environment:
      - "LS_JAVA_OPTS=-Xmx256m -Xms256m"

  # Filebeat for log collection
  filebeat:
    image: docker.elastic.co/beats/filebeat:8.11.0
    container_name: attendance-app-filebeat
    user: root
    volumes:
      - ./filebeat.yml:/usr/share/filebeat/filebeat.yml:ro
      - ./learning-app/logs:/app/logs:ro
    networks:
      - attendance-app-network
    depends_on:
      - logstash
    restart: unless-stopped
    command: >
      sh -c "
        filebeat -e -strict.perms=false
      "

  # Main NestJS application (Backend)
  # be-attendance:
  #   build:
  #     context: ./learning-app
  #     dockerfile: Dockerfile
  #   env_file:
  #     - ./learning-app/.env
  #   container_name: be-attendance
  #   ports:
  #     - "3010:3010"
  #   command: >
  #     sh -c "
  #       npx prisma migrate deploy &&
  #       node dist/main"
        
  #   volumes:
  #     - ./learning-app/uploads:/app/uploads
  #   networks:
  #     - attendance-app-network
  #   depends_on:
  #     - postgres
  #     - redis
  #     - minio
  #     - n8n
  #   restart: unless-stopped

  # fe-attendance:
  #   build:
  #     context: ./learning-app-ui
  #     dockerfile: Dockerfile
  #   env_file:
  #     - ./learning-app-ui/.env
  #   container_name: fe-attendance
  #   ports:
  #     - "3015:3000"
  #   networks:
  #     - attendance-app-network
  #   depends_on:
  #     - postgres
  #     - redis
  #     - minio
  #     - n8n
  #   restart: unless-stopped

networks:
  attendance-app-network:
    driver: bridge

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  minio_data:
    driver: local
  n8n_data:
    driver: local
  elasticsearch_data:
    driver: local
  kibana_data:
    driver: local 